#!/bin/sh

set -eo pipefail

# ============================================================================ #
# ============================== HELPER METHODS ============================== #
# ============================================================================ #

# ============================= HELPERS: Basics ============================== #

help() {
  cat <<HELP
Usage: $(basename $0) [PATH]

Create or attach to dev session

Arguments:
  PATH        Path to the directory
HELP
}

exit_with_error() {
  echo "$1" 1>&2
  exit 1
}

# =============================== HELPERS: Tmux ============================== #

switch_or_attach() {
  local session="$1"

  if [ -n "$TMUX" ]; then
    tmux switch-client -t="$session"
  else
    tmux attach-session -t="$session"
  fi
}

# ============================================================================ #
# ============================= SESSION CREATORS ============================= #
# ============================================================================ #

# =========================== Dev session creator ============================ #

create_or_attach_to_dev_session() {
  local working_directory="$1"
  local session="$(basename "$working_directory")"

  [[ -d "$working_directory" ]] || exit_with_error "Directory not found."

  if tmux has-session -t="$session" 2>/dev/null; then
    switch_or_attach "$session"
  else
    tmux new-session -d -s "$session" -c "$working_directory" -n "editor" "nvim"
    tmux new-window -t="$session" -n "shell" -c "$working_directory" "nu -l"

    if [[ $session == "doctolib" ]]; then
      tmux new-window -t="$session" -n "console" -c "$working_directory"
      tmux new-window -t="$session" -n "server" -c "$working_directory"
      tmux new-window -t="$session" -n "services" -c "$working_directory"
      tmux new-window -t="$session" -n "vite" -c "$working_directory"
      tmux new-window -t="$session" -n "staging" -c "$working_directory"
      tmux new-window -t="$session" -n "worker" -c "$working_directory"
    fi

    switch_or_attach "$session:shell"
  fi
}

# ============================================================================ #
# ================================ ENTRYPOINT ================================ #
# ============================================================================ #

main() {
  local session_name="$1"

  if tmux has-session -t="$session_name" >/dev/null 2>&1; then
    switch_or_attach "$session_name"
  elif [[ -d "$session_name" ]]; then
    create_or_attach_to_dev_session "$session_name"
  elif [[ -d "$HOME/Developer/$session_name" ]]; then
    create_or_attach_to_dev_session "$HOME/Developer/$session_name"
  else
    tmux new-session -d -c "$HOME" -s "$session_name" -n "shell" "nu -l"
    switch_or_attach "$session_name:shell"
  fi
}

if [[ $# -eq 0 ]]; then
  switch_or_attach "main"
elif [[ "$1" == "-h" ]] || [[ "$1" == "--help" ]]; then
  help
elif [[ $# -eq 1 ]]; then
  main "$@"
else
  help
  exit 1
fi
